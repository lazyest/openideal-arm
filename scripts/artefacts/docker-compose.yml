version: "3"

services:
  maintenance-page:
    image: nginx:latest
    volumes:
      - ./error-pages:/usr/share/nginx/error-pages
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.maintenance-page.loadbalancer.server.port=80"
      - "traefik.http.routers.maintenance-page.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.maintenance-page.priority=1"
      - "traefik.http.routers.maintenance-page.middlewares=maintenance-page@docker"
      - "traefik.http.routers.maintenance-page.entrypoints=web"
      - "traefik.http.middlewares.maintenance-page.errors.status=400-599"
      - "traefik.http.middlewares.maintenance-page.errors.service=maintenance-page"
      - "traefik.http.middlewares.maintenance-page.errors.query=/"

  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    restart: always
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - /opt/openideal/mariadb:/var/lib/mysql # Use bind mount
    ports:
      - 3306:3306

  php:
    image: wodby/drupal-php:$PHP_TAG
    restart: always
    container_name: "${PROJECT_NAME}_php"
    environment:
#      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
#      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mail:25
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
#      COLUMNS: 80 # Set 80 columns for docker exec -it.
## Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_DEFAULT_ENABLE: 1
#      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
#      PHP_IDE_CONFIG: serverName=my-ide
#      PHP_XDEBUG_IDEKEY: "my-ide"
#      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
#      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
#      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
#      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
#      PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
## PHPUnit Drupal testing configurations
#      SIMPLETEST_BASE_URL: "http://nginx"
#      SIMPLETEST_DB: "${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}#tests_"
#      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'
    volumes:
      - ./:/var/www/html:cached
    working_dir: /var/www/html/web
## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
#      - ./:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
## For XHProf and Xdebug profiler traces
#      - files:/mnt/files

  nginx:
    image: wodby/nginx:$NGINX_TAG
    restart: always
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
#      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./:/var/www/html:cached
#    ports:
#      - 80:80
# For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
#      - ./:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
    labels:
      - traefik.enable=true
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
      - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}_nginx.tls.certresolver=myhttpchallenge"
      - traefik.http.middlewares.rhttps.redirectscheme.scheme=https
      - traefik.http.middlewares.rhttps.redirectscheme.permanent=true
      - "traefik.http.routers.web-insecure.rule=Host(`${PROJECT_BASE_URL}`)"
      - traefik.http.routers.web-insecure.entrypoints=web
      - traefik.http.routers.web-insecure.middlewares=rhttps
      - "traefik.http.services.${PROJECT_NAME}_nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.${PROJECT_NAME}_nginx.priority=100"

#      - "traefik.http.middlewares.tauth.basicauth.usersfile=letsencrypt/.htpass"
#      - "traefik.http.routers.rocketchat.middlewares=tauth"

#  mailhog:
#    image: mailhog/mailhog
#    restart: always
#    container_name: "${PROJECT_NAME}_mailhog"
#    labels:
#      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
#      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  adminer:
    container_name: "${PROJECT_NAME}_adminer"
    restart: always
    image: wodby/adminer:$ADMINER_TAG
    environment:
# For PostgreSQL:
#      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: $DB_HOST
      ADMINER_DEFAULT_DB_NAME: $DB_NAME
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myhttpchallenge.acme.email=adminmarket@linnovate.net"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
#    labels:
#        - "traefik.enable=true"
#        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
#        - "traefik.http.routers.traefik.rule=Host(`${PROJECT_BASE_URL}`)"
#        - "traefik.http.routers.traefik.entryPoints=websecure"
#        - "traefik.http.routers.traefik.tls=true"
#        - "traefik.http.routers.traefik.middlewares=maintenance-page@docker"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/openideal/letsencrypt:/letsencrypt

  mail:
    image: bytemark/smtp
    restart: always
    environment:
      MAILNAME: ${PROJECT_BASE_URL}
      RELAY_HOST: smtp.sendgrid.net
      RELAY_PORT: 587
      RELAY_USERNAME: apikey
