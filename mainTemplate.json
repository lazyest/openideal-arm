{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
        "type": "string",
        "defaultValue": "openideal",
        "metadata": {
          "description": "Specifies a VM name."
        }
        },
        "adminUsername": {
        "type": "string",
        "defaultValue": "ubuntu",
        "metadata": {
        "description": "Username for the Virtual Machine."
        }
        },
        "location": {
            "type": "string",
            "defaultValue": "West Europe",
            "metadata": {
              "description": "Specifies the location for all of the resources created by this template."
            }
        },   
        "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
        "sshPublicKey",
        "password"
        ],
        "metadata": {
            "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
        },
        "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "vmSize": {
        "type": "string",
        "allowedValues": [
            "Standard_A4_v2",
            "Standard_A8_v2",
            "Standard_D1_v2",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D12_v2",
            "Standard_D13_v2"
        ],
        "metadata": {
            "description": "This is the headnode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
            }
        },
         "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "The base URI where artifacts required by this template are located including a trailing '/'"
          },
          //"defaultValue": "[deployment().properties.templateLink.uri]"
          "defaultValue": "https://raw.githubusercontent.com/lazyest/openideal-arm/main/"
      },

            "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
          },
          "defaultValue": ""
      }
    },
    "functions": [],
    "variables": {
        "vmName1": "[parameters('vmName')]",
        "imageSize": "[parameters('vmSize')]",
        "publicIP1": "[concat(variables('vmName1'), '-PublicIP')]",
        "nsgName": "[concat(variables('vmName1'), '-NSG')]",
        "VirtualNetworkName": "[concat(variables('vmName1'), '-VirtualNetwork')]",
        "interfaceName1": "[concat(variables('vmName1'), '-NetworkInterface')]",
        "subNetName": "[concat(variables('VirtualNetworkName'), '-Subnet')]",
        "scriptName": "install",
        "scriptNameSh": "[concat(variables('scriptName'), '.sh')]",
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/install.sh', parameters('_artifactsLocationSasToken')))]",
        "artifactsUri": "[uri(parameters('_artifactsLocation'), concat('scripts/artefacts/', parameters('_artifactsLocationSasToken')))]",
        "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
            "publicKeys": [
             {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
    }
    },
    "resources": [
      {   "apiVersion": "2019-07-01",
      "name": "pid-55555fec-f7d1-4010-9c33-2cb3a29e30ef",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP1')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": ["22","80","443"],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]", 
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subNetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('interfaceName1')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[variables('interfaceName1')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VirtualNetworkName'), variables('subNetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName1')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
            ],
            "tags": {
                "displayName": "[variables('vmName1')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('imageSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                      "publisher": "Canonical",
                      "offer": "UbuntuServer",
                      "sku": "18.04-LTS",
                      "version": "latest"
                    },
                    "osDisk": {
                      "createOption": "fromImage"
                    }
                },    
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName1'), '/', variables('scriptName'))]",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vmName1')]"
            ],
            "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
            "fileUris": [
                "[variables('scriptFileUri')]"
            ],
            "commandToExecute": "[concat('sh ', ' ', variables('scriptNameSh'), ' ', parameters('adminUsername'),' ',reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP1'))).IpAddress,' ',variables('artifactsUri'))]"
            }
        }
        }
],
    "outputs": {}
}
